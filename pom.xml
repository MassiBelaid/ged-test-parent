<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>fr.atos.modules.test</groupId>
    <artifactId>ged-parent</artifactId>
    <version>1.0.0.1-SNAPSHOT</version>
    <name>TEST - Parent Module - Parent Module - parent</name>
    <description>TEST - Parent Module - Parent Module - Dependancies and version</description>
    <packaging>pom</packaging>
    <prerequisites>
        <maven>3.3.0</maven>
    </prerequisites>
    <properties>
        <!-- Alfresco Maven Plugin version to use -->
        <alfresco.sdk.version>4.1.0</alfresco.sdk.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Properties used in dependency declarations, you don't need to change these -->
        <alfresco.groupId>org.alfresco</alfresco.groupId>
        <alfresco.bomDependencyArtifactId>acs-packaging</alfresco.bomDependencyArtifactId>
        <alfresco.platform.version>6.2.2.1</alfresco.platform.version>
        <alfresco.share.version>6.2.2</alfresco.share.version>
        <!-- JRebel Hot reloading of classpath stuff and web resource stuff -->
        <jrebel.version>1.1.8</jrebel.version>
        <!-- Jacoco Version -->
        <jacoco.version>0.8.3</jacoco.version>
        <!-- Compile with Java 8, default is 5 -->
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <!-- Define continuous inspection scope -->
        <sonar.sources>src</sonar.sources>
        <sonar.inclusions>**/main/**/*.java,**/main/**/*.js,**/main/resources/**/*.xml</sonar.inclusions>
        <!-- Property injected in module.properties -->
        <module.branch>dev</module.branch>
        <module.commit>#dev#</module.commit>
        <commons.version>6.0.0.2</commons.version>
        <test-api.version>1.3</test-api.version>
        <create-site-api.version>1.0.0.2</create-site-api.version>
        <javascript-console.version>0.6</javascript-console.version>
    </properties>
    <distributionManagement>
        <repository>
            <id>atos-nexus-release-deploy</id>
            <url>${nexus.url}/repository/maven-releases</url>
        </repository>
        <snapshotRepository>
            <id>atos-nexus-snapshot-deploy</id>
            <url>${nexus.url}/repository/maven-snapshots</url>
        </snapshotRepository>
    </distributionManagement>
    <!-- Libs used in Unit and Integration tests -->
    <!-- IMPORTANT - Test dependencies need to be here in the top parent POM as
                                  the Alfresco Maven IT Mojo runs as part of the parent project ... -->
    <dependencies>
        <!-- include hamcrest test first -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- The main Alfresco Repo dependency for compiling Java code in src/main/java -->
        <dependency>
            <groupId>${alfresco.groupId}</groupId>
            <artifactId>alfresco-remote-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Bring in Alfresco RAD so we get access to AlfrescoTestRunner classes -->
        <dependency>
            <groupId>org.alfresco.maven</groupId>
            <artifactId>alfresco-rad</artifactId>
            <version>${alfresco.sdk.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>atos.alfresco.commons</groupId>
            <artifactId>test-api</artifactId>
            <version>${test-api.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <!-- This will import the dependencyManagement for all artifacts in the selected Alfresco platform.
                                              NOTE: You still need to define dependencies in your POM, but you can omit version as
                                   it's enforced by this dependencyManagement.
                             NOTE: It defaults to the latest version this SDK pom has been tested with,
                                   but alfresco version can/should be overridden in your project's pom
                        -->
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>${alfresco.bomDependencyArtifactId}</artifactId>
                <version>${alfresco.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Redefine the following Share dependencies as they have different version numbers than platform.
                                              They are defined in alfresco-platform-distribution... -->
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>share</artifactId>
                <version>${alfresco.share.version}</version>
                <type>war</type>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>share</artifactId>
                <version>${alfresco.share.version}</version>
                <classifier>classes</classifier>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>alfresco-web-framework-commons</artifactId>
                <version>${alfresco.share.version}</version>
                <classifier>classes</classifier>
                <scope>provided</scope>
            </dependency>
            <!-- commons atos -->
            <dependency>
                <groupId>atos.alfresco.commons</groupId>
                <artifactId>commons-api</artifactId>
                <version>${commons.version}</version>
            </dependency>
            <dependency>
                <groupId>atos.alfresco.modules</groupId>
                <artifactId>create-site-platform-jar</artifactId>
                <version>${create-site-api.version}</version>
            </dependency>
            <dependency>
                <groupId>atos.alfresco.commons</groupId>
                <artifactId>model</artifactId>
                <version>${commons.version}</version>
            </dependency>
            <!-- Include this module, only if needed -->
            <dependency>
                <groupId>atos.alfresco.commons</groupId>
                <artifactId>autorename</artifactId>
                <version>${commons.version}</version>
            </dependency>
            <dependency>
                <groupId>de.fmaul</groupId>
                <artifactId>javascript-console-repo</artifactId>
                <version>${javascript-console.version}</version>
                <type>amp</type>
            </dependency>
            <dependency>
                <groupId>de.fmaul</groupId>
                <artifactId>javascript-console-share</artifactId>
                <version>${javascript-console.version}</version>
                <type>amp</type>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <!-- Filter resources in any sub-project with this config -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <nonFilteredFileExtensions>
                            <!-- jpg, jpeg, gif, bmp and png are added automatically -->
                            <nonFilteredFileExtension>ftl</nonFilteredFileExtension>
                            <nonFilteredFileExtension>acp</nonFilteredFileExtension>
                            <nonFilteredFileExtension>svg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>doc</nonFilteredFileExtension>
                            <nonFilteredFileExtension>docx</nonFilteredFileExtension>
                            <nonFilteredFileExtension>xls</nonFilteredFileExtension>
                            <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ppt</nonFilteredFileExtension>
                            <nonFilteredFileExtension>pptx</nonFilteredFileExtension>
                            <nonFilteredFileExtension>bin</nonFilteredFileExtension>
                            <nonFilteredFileExtension>lic</nonFilteredFileExtension>
                            <nonFilteredFileExtension>swf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>zip</nonFilteredFileExtension>
                            <nonFilteredFileExtension>msg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>jar</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                            <nonFilteredFileExtension>css</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                            <nonFilteredFileExtension>psd</nonFilteredFileExtension>
                            <nonFilteredFileExtension>js</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.zeroturnaround</groupId>
                    <artifactId>jrebel-maven-plugin</artifactId>
                    <version>${jrebel.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.19.1</version>
                    <configuration>
                        <systemPropertyVariables>
                            <acs.endpoint.path>${test.acs.endpoint.path}</acs.endpoint.path>
                        </systemPropertyVariables>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify-test</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.surefire</groupId>
                            <artifactId>surefire-junit47</artifactId>
                            <version>2.19.1</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <!-- Make sure resources in sub-projects are filtered -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- Filter the test resource files in the AIO parent project, and do property substitutions.
                                              We need this config so this is done before the Alfresco Maven Plugin 'run' is executed. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <inherited>false</inherited>
                <!-- Run only for the AIO parent Project -->
                <executions>
                    <execution>
                        <id>copy-and-filter-docker-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/docker</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>compose</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Compress JavaScript files and store as *-min.js -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
                <version>1.5.1</version>
                <executions>
                    <!-- Compress the JS files under the assembly folder -->
                    <execution>
                        <id>compress-assembly</id>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/main/assembly/web</sourceDirectory>
                            <outputDirectory>${project.basedir}/src/main/assembly/web</outputDirectory>
                            <excludes>
                                <exclude>**/webscripts/**</exclude>
                                <exclude>**/site-webscripts/**</exclude>
                                <exclude>**/META-INF/**</exclude>
                                <exclude>**/*.lib.js</exclude>
                                <exclude>**/*.css</exclude>
                                <exclude>**/*-min.js</exclude>
                                <exclude>**/*-min.css</exclude>
                            </excludes>
                            <force>true</force>
                            <jswarn>false</jswarn>
                        </configuration>
                    </execution>
                    <!-- Compress the JS files under the resources folder -->
                    <execution>
                        <id>compress-resources</id>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>**/webscripts/**</exclude>
                                <exclude>**/site-webscripts/**</exclude>
                                <exclude>**/*.lib.js</exclude>
                                <exclude>**/*.css</exclude>
                                <exclude>**/*-min.js</exclude>
                                <exclude>**/*-min.css</exclude>
                            </excludes>
                            <force>true</force>
                            <jswarn>false</jswarn>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Hot reloading with JRebel -->
            <plugin>
                <groupId>org.zeroturnaround</groupId>
                <artifactId>jrebel-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-rebel-xml</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- For more information about how to configure JRebel plugin see:
                                                                      http://manuals.zeroturnaround.com/jrebel/standalone/maven.html#maven-rebel-xml -->
                    <classpath>
                        <fallback>all</fallback>
                        <resources>
                            <resource>
                                <directory>${project.build.outputDirectory}</directory>
                                <directory>${project.build.testOutputDirectory}</directory>
                            </resource>
                        </resources>
                    </classpath>
                    <!--
                                                                   alwaysGenerate - default is false
                                          If 'false' - rebel.xml is generated if timestamps of pom.xml and the current rebel.xml file are not equal.
                                          If 'true' - rebel.xml will always be generated
                                        -->
                    <alwaysGenerate>true</alwaysGenerate>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>prepare</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>prepare-agent-integration</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                    <!-- rapport generer avec mvn jacoco:report-aggregate -->
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>java8</id>
            <activation>
                <jdk>[1.8,11.0)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.0</version>
                        <configuration>
                            <source>1.8</source>
                            <target>1.8</target>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>java11</id>
            <activation>
                <jdk>[11.0,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.0</version>
                        <configuration>
                            <release>11</release>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>amp</id>
            <activation>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-assembly-plugin</artifactId>
                            <version>2.6</version>
                            <executions>
                                <execution>
                                    <id>build-amp-file</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>single</goal>
                                    </goals>
                                    <configuration>
                                        <appendAssemblyId>false</appendAssemblyId>
                                        <descriptors>
                                            <descriptor>src/main/assembly/amp.xml</descriptor>
                                        </descriptors>
                                    </configuration>
                                </execution>
                            </executions>
                            <dependencies>
                                <dependency>
                                    <groupId>org.alfresco.maven.plugin</groupId>
                                    <artifactId>alfresco-maven-plugin</artifactId>
                                    <version>${alfresco.sdk.version}</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
    <modules>
        <module>platform</module>
        <module>share</module>
        <module>docker</module>
    </modules>
</project>
